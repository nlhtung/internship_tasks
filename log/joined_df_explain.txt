=== Execution Plan for joined_df ===
== Physical Plan ==
AdaptiveSparkPlan (7)
+- Project (6)
   +- BroadcastHashJoin LeftOuter BuildRight (5)
      :- Scan csv  (1)
      +- BroadcastExchange (4)
         +- Filter (3)
            +- Scan csv  (2)


(1) Scan csv 
Output [25]: [ORDERNUMBER#17, QUANTITYORDERED#18, PRICEEACH#19, ORDERLINENUMBER#20, SALES#21, ORDERDATE#22, STATUS#23, QTR_ID#24, MONTH_ID#25, YEAR_ID#26, PRODUCTLINE#27, MSRP#28, PRODUCTCODE#29, CUSTOMERNAME#30, PHONE#31, ADDRESSLINE1#32, ADDRESSLINE2#33, CITY#34, STATE#35, POSTALCODE#36, COUNTRY#37, TERRITORY#38, CONTACTLASTNAME#39, CONTACTFIRSTNAME#40, DEALSIZE#41]
Batched: false
Location: InMemoryFileIndex [file:/mnt/c/Users/nlhtung/Study/DE/task_day_6/input/sales_data.csv]
ReadSchema: struct<ORDERNUMBER:int,QUANTITYORDERED:int,PRICEEACH:double,ORDERLINENUMBER:int,SALES:double,ORDERDATE:string,STATUS:string,QTR_ID:int,MONTH_ID:int,YEAR_ID:int,PRODUCTLINE:string,MSRP:int,PRODUCTCODE:string,CUSTOMERNAME:string,PHONE:string,ADDRESSLINE1:string,ADDRESSLINE2:string,CITY:string,STATE:string,POSTALCODE:int,COUNTRY:string,TERRITORY:string,CONTACTLASTNAME:string,CONTACTFIRSTNAME:string,DEALSIZE:string>

(2) Scan csv 
Output [2]: [PRODUCTCODE#84, PROMOTION_NAME#85]
Batched: false
Location: InMemoryFileIndex [file:/mnt/c/Users/nlhtung/Study/DE/task_day_6/input/promotions.csv]
PushedFilters: [IsNotNull(PRODUCTCODE)]
ReadSchema: struct<PRODUCTCODE:string,PROMOTION_NAME:string>

(3) Filter
Input [2]: [PRODUCTCODE#84, PROMOTION_NAME#85]
Condition : isnotnull(PRODUCTCODE#84)

(4) BroadcastExchange
Input [2]: [PRODUCTCODE#84, PROMOTION_NAME#85]
Arguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=60]

(5) BroadcastHashJoin
Left keys [1]: [PRODUCTCODE#29]
Right keys [1]: [PRODUCTCODE#84]
Join type: LeftOuter
Join condition: None

(6) Project
Output [27]: [PRODUCTCODE#29, ORDERNUMBER#17, QUANTITYORDERED#18, PRICEEACH#19, ORDERLINENUMBER#20, SALES#21, ORDERDATE#22, STATUS#23, QTR_ID#24, MONTH_ID#25, YEAR_ID#26, PRODUCTLINE#27, MSRP#28, CUSTOMERNAME#30, PHONE#31, ADDRESSLINE1#32, ADDRESSLINE2#33, CITY#34, STATE#35, POSTALCODE#36, COUNTRY#37, TERRITORY#38, CONTACTLASTNAME#39, CONTACTFIRSTNAME#40, DEALSIZE#41, PROMOTION_NAME#85, (cast(QUANTITYORDERED#18 as double) * PRICEEACH#19) AS CALC_SALES#116]
Input [27]: [ORDERNUMBER#17, QUANTITYORDERED#18, PRICEEACH#19, ORDERLINENUMBER#20, SALES#21, ORDERDATE#22, STATUS#23, QTR_ID#24, MONTH_ID#25, YEAR_ID#26, PRODUCTLINE#27, MSRP#28, PRODUCTCODE#29, CUSTOMERNAME#30, PHONE#31, ADDRESSLINE1#32, ADDRESSLINE2#33, CITY#34, STATE#35, POSTALCODE#36, COUNTRY#37, TERRITORY#38, CONTACTLASTNAME#39, CONTACTFIRSTNAME#40, DEALSIZE#41, PRODUCTCODE#84, PROMOTION_NAME#85]

(7) AdaptiveSparkPlan
Output [27]: [PRODUCTCODE#29, ORDERNUMBER#17, QUANTITYORDERED#18, PRICEEACH#19, ORDERLINENUMBER#20, SALES#21, ORDERDATE#22, STATUS#23, QTR_ID#24, MONTH_ID#25, YEAR_ID#26, PRODUCTLINE#27, MSRP#28, CUSTOMERNAME#30, PHONE#31, ADDRESSLINE1#32, ADDRESSLINE2#33, CITY#34, STATE#35, POSTALCODE#36, COUNTRY#37, TERRITORY#38, CONTACTLASTNAME#39, CONTACTFIRSTNAME#40, DEALSIZE#41, PROMOTION_NAME#85, CALC_SALES#116]
Arguments: isFinalPlan=false

